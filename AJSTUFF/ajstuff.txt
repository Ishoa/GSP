1.
a. int= 4bytes
b. long= 4bytes
c. short= 2bytes
d. char= 1bytes
e. float= 4bytes
f. double= 8bytes
g. int*= 4bytes
h. long long=8bytes
a long long has 64 bits in it.
256 
512
1023
2048
4096
8192
16384
32768
65536

Microsoft compiler
GCC compiler GNU is Not Unix
LLUM compiler

memory fragmentation 
not enough space to put your memory block because different sizes of memory taht arnt contiguious that are not big enough for the big chunks are too small for the small chunks swiss cheeze hoels of wasted space

4.
vector

pointer poitns to a location in memory
array if called without the brackets poitns to a location in memory
both are references to one location in memory
pointer is an L value that u can modify
and array is not an L value

brackets are nto array access numbers they have always been pointers.

to iterate across a vector is pointer ++ interate across a linked list = pointer = next
linked list is non-continguous vector is continguous
vector is faster at accessing data int he middle o(1)
linked list is o(N)

linked list is faster at inserting in the beginning  O(1)
vector is o(N) has to shift every element over before adding another element

vector is usually o(1) when inserting to the end and then faster but if it is full then it becomes of o(N)+memory allocation
linked list has memory allocation every time

linked list takes ~o(N) when inserting at the end and randomly same with vector

whenever pointers are involved, vectors are a horrible idea

linked lists are prone to cache miss

vectors are prone to fragmentation
not memory stable

void* means it can point to anything a pointer to an undefined type and must be type casted
void means no defined type

unsigned  means the sign bit is positive . as a result of this the number can be twice as big but never negative

#include does a file copy and paste;

ifdef and endif describs conditionally included code that will not show unless it is defined

ex 
#defien is a macro  templater.
#undef releases a macro
#define somestuff
// if defien somestuff didnt exist  thhe code bellow wouldnt be compiled
#ifndef somestuff
sdfasdfdf as
asdfasdf
asdfdf
#endif

conditionally written code

pre processor

compiler
assemb0ler
linker

argc argv are just command line arguments

system calls system commands;

extern is a compiler message that says dont worry about this right now because
during the link step (static or dynamic) it will exist i promise

explicit - prevent single argumetn constructors from being automaticallyc alled in a type conversion.

volitile= im going to make a peice of information usually one byte..
and it means you are not allowed to cache it.. u must go to the ram 
used to mark chunks of data for being used or not used / basically door to the bathroom.
can also add a callback for when its done. or else will need to constantly check.
system is the most powerful tool in the entire programing arsenal.

use
_getch from conio to wait for a keypress.

maloc and free do not call constructors or destructors must explicitely call them yourself
with new and delete constructors and deconstructors are called automatically
altho maloc and free are faster.

little indian and big indian

little indian stores the least significant byte first 
big indian stores the largest significant byte first


inline means this function is a special function 
means any fucntion that has it can be multiply defined in more than one compilation unit.
